<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.javadog</groupId>
    <artifactId>cws</artifactId>
    <version>1.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>CWS</name>

    <organization>
        <name>JavaDog.io</name>
        <url>https://javadog.io/</url>
    </organization>

    <developers>
        <developer>
            <id>kim@dawn.dk</id>
            <name>Kim NÃ¸rregaard Jensen</name>
            <organization>JavaDog.io</organization>
            <organizationUrl>https://javadog.io/</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <modules>
        <module>cws-api</module>
        <module>cws-core</module>
        <module>cws-rest</module>
        <module>cws-soap</module>
        <module>cws-wildfly</module>
        <module>cws-payara</module>
    </modules>

    <scm>
      <connection>scm:git:https://github.com/JavaDogs/cws.git</connection>
    </scm>

    <properties>
        <!-- Provided Dependencies -->
        <javaee.version>7.0</javaee.version>
        <!-- JSON for REST -->
        <gson.version>2.8.5</gson.version>
        <!-- XML for SOAP -->
        <jaxws.version>2.3.1</jaxws.version>
        <cxf.version>3.3.2</cxf.version>
        <xmlschema.version>2.2.4</xmlschema.version>
        <!-- Test Plugins -->
        <junit.version>5.4.2</junit.version>
        <slf4j.version>1.7.26</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <hibernate.version>5.4.2.Final</hibernate.version>
        <h2.version>1.4.199</h2.version>
        <!-- Maven Plugins -->
        <maven.compiler.plugin>3.8.0</maven.compiler.plugin>
        <maven.javadoc.plugin>3.1.0</maven.javadoc.plugin>
        <maven.source.plugin>3.1.0</maven.source.plugin>
        <maven.surefire.plugin>2.22.2</maven.surefire.plugin>
        <maven.jar.plugin>3.1.2</maven.jar.plugin>
        <maven.war.plugin>3.2.3</maven.war.plugin>
        <maven.shade.plugin>3.2.1</maven.shade.plugin>
        <org.owasp.plugin>5.0.0</org.owasp.plugin>
        <org.jacoco.plugin>0.8.4</org.jacoco.plugin>
        <org.sonar.plugin>3.6.0.1398</org.sonar.plugin>
        <org.build.plugin>3.0.0</org.build.plugin>

        <!-- To avoid that the builds are platform specific -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- SonarQube Settings -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <!-- The destination file for the code coverage report has to be set to
             the same value for each module pom. This will allow JaCoCo to sum
             up information in the same report, providing cross-module coverage. -->
        <sonar.jacoco.reportPaths>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPaths>
        <!-- Sonar is by default analyzing everything. But Generated Code is
             beyond our control, so error reports from this is just annoying!
             Legend: *  - zero or more characters
                     ** - zero or more directories -->
        <sonar.exclusions>**/generated*/**</sonar.exclusions>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cws-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cws-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cws-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cws-soap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cws-client-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cws-client-soap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>${javaee.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Following is needed for Java 10+ -->
            <dependency>
              <groupId>javax.xml.ws</groupId>
              <artifactId>jaxws-api</artifactId>
              <version>${jaxws.version}</version>
            </dependency>

            <!-- Following is required to build & run the REST Client -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- Following is required to build the SOAP Client. -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <!-- Following is required to run the SOAP Client. -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-databinding-jaxb</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ws.xmlschema</groupId>
                <artifactId>xmlschema-core</artifactId>
                <version>${xmlschema.version}</version>
            </dependency>

            <!-- Dependencies used for testing -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cws-core</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>META-INF/**/*.xml</include>
                </includes>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven.shade.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${org.owasp.plugin}</version>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${org.jacoco.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${org.sonar.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${org.build.plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <debug>false</debug>
                    <encoding>UTF-8</encoding>
                    <!-- Use "release" instead of these for Java 9+ -->
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Testing should be done in parallel if possbible.
                         However, some of the CWS tests have been written in a
                         way, which is rather nasty, where default DB objects
                         have been deliberately altered, causing JDBC problems,
                         as it is not possible to acquire table locks.
                           It should be noted, that it is not a likely use-case
                         that Member Accounts are being removed and added in the
                         way, which the tests indicates. Hence, reverting to
                         running the tests sequentially has been decided, to
                         guarantee that all builds are green.
                           It is with sorrow that this decision was made, as the
                         parallel nature of the tests had the secondary goal of
                         ensuring that the system is also thread-safe. However,
                         the surefire plugin may run the tests parallel, but it
                         is with a predictable pattern, meaning that the same
                         build systems will always yield the same result. -->
                    <parallel>none</parallel>
                    <threadCount>10</threadCount>
                </configuration>
                <goals>
                    <goal>test</goal>
                </goals>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <destFile>${sonar.jacoco.reportPaths}</destFile>
                    <append>true</append>
                    <includes>
                        <include>io.javadog.cws.*</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-test</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${sonar.jacoco.reportPaths}</dataFile>
                            <outputDirectory>${project.basedir}/../target/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
